---

#
# Updates all packages for macos-based distributions
#

- name: Get macOS version
  shell: sw_vers -productVersion
  register: macos_version

- name: Display macOS Version
  debug:
    var: macos_version

# Skipping linting as no situation where this can't run (lint error 301)
- name: Check for xcode-tools
  raw: xcode-select --print-path &> /dev/null
  register: xcode
  ignore_errors: yes
  tags:
    - skip_ansible_lint

- name: Install xcode-tools
  script: scripts/install-xcode.sh
  when: xcode.rc > 1

- name: Check if Homebrew is already installed
  stat:
    path: /usr/local/bin/brew
  register: brew

- name: Fix broken fiddle install (Apple Silicone)
  become: yes
  become_user: "{{ ansible_user }}"
  script: scripts/install-fiddle.sh
  when:
    - ansible_architecture == "arm64"
    - not brew.stat.exists

- name: Install Homebrew
  become: yes
  become_user: "{{ ansible_user }}"
  script: scripts/install-homebrew.sh
  when: not brew.stat.exists

- name: Upgrade installed packages
  become: yes
  become_user: "{{ ansible_user }}"
  homebrew:
    upgrade_all: yes
  tags:
    - brew_upgrade

- name: Install brew cu
  become: yes
  become_user: "{{ ansible_user }}"
  homebrew_tap:
    name: buo/cask-upgrade
  tags:
    - brew_cu

- name: Add AdoptOpenJDK Java Repo
  become: yes
  become_user: "{{ ansible_user }}"
  homebrew_tap:
    name: AdoptOpenJDK/openjdk

# Skipping linting as no situation where this can't run (lint error 301)
- name: Update Casks
  become: yes
  become_user: "{{ ansible_user }}"
  command: /usr/local/bin/brew cu
  tags:
    - brew_cu
    - skip_ansible_lint

- name: Install Build Tool Packages
  become: yes
  become_user: "{{ ansible_user }}"
  homebrew: "name={{ item }} state=present"
  with_items: "{{ Build_Tool_Packages }}"
  tags: build_tools

- name: Install Build Tool Packages NOT arm64
  become: yes
  become_user: "{{ ansible_user }}"
  homebrew: "name={{ item }} state=present"
  with_items: "{{ Build_Tool_Packages_NOT_arm64 }}"
  when:
    - ansible_architecture != "arm64"
  tags: build_tools

- name: Install Build Tool Packages NOT macOS 10.12
  become: yes
  become_user: "{{ ansible_user }}"
  homebrew: "name={{ item }} state=present"
  with_items: "{{ Build_Tool_Packages_NOT_10_12 }}"
  when:
    - not macos_version | regex_search("10.12")
  tags: build_tools

- name: Install Build Tool Casks
  become: yes
  become_user: "{{ ansible_user }}"
  homebrew_cask: "name={{ item }} state=present"
  with_items: "{{ Build_Tool_Casks }}"
  when:
    - ansible_architecture != "arm64"
  tags: build_tools

- name: Install Test Tool Packages
  become: yes
  become_user: "{{ ansible_user }}"
  homebrew: "name={{ item }} state=present"
  with_items: "{{ Test_Tool_Packages }}"
  tags: test_tools

- name: Install Test Tool Packages NOT arm64
  become: yes
  become_user: "{{ ansible_user }}"
  homebrew: "name={{ item }} state=present"
  with_items: "{{ Test_Tool_Packages_NOT_arm64 }}"
  when:
    - ansible_architecture != "arm64"
  tags: test_tools

- name: Install Test Tool Casks
  become: yes
  become_user: "{{ ansible_user }}"
  homebrew_cask: "name={{ item }} state=present"
  with_items: "{{ Test_Tool_Casks }}"
  when:
    - ansible_architecture != "arm64"
  tags: test_tools

# As per https://github.com/eclipse/openj9/issues/3790
- name: Creating /etc/sysctl.conf for kernel tunings
  file:
    path: /etc/sysctl.conf
    state: touch
    mode: 0644
    owner: root
    group: wheel
  tags:
    - kernel_tuning

- name: Writing kernel tuning parameters to /etc/sysctl.conf
  blockinfile:
    path: /etc/sysctl.conf
    block: |
      kern.sysv.shmmax=125839605760
      kern.sysv.shmall=30722560
  register: kernel
  tags:
    - kernel_tuning

# Skipping linting as not to introduce handlers into task-only playbooks (lint error 503)
- name: Reboot macOS after tweaking kernel tuning parameters
  reboot:
    reboot_timeout: 3600
  when: kernel.changed
  tags:
    - kernel_tuning
    - skip_ansible_lint
