---
###############################################
# AdoptOpenJDK Ansible JCK svcs Playbook for: #
# -------- Ubuntu 16 (tested on x64) -------- #
###############################################

- hosts: all
  user: root
  become: yes
  tasks:
    - block:
        - name: Load AdoptOpenJDKs variable file
          include_vars: variables/adoptopenjdk_variables.yml
        - name: OS update -- apt-get upgrade
          apt: upgrade=safe update_cache=yes
          tags: patch_update
        - name: Install JCK prerequisistes
          apt: pkg={{ item }} state=latest
          with_items:
            - iptables-persistent
            - ant
            - ftpd
            - gcc
            - krb5-kdc
            - krb5-admin-server
            - pwgen
            - tomcat8
            - unzip
          tags:
            # TODO: replace 'latest' with specified versions
            - skip_ansible_lint


        - name: Create Jenkins user
          action: user name="{{ Jenkins_Username }}" state=present
          ignore_errors: yes
          tags: jenkins_user
        - name: Set ssh key for jenkins user
          authorized_key:
            user: "{{ Jenkins_Username }}"
            state: present
            key: "{{ lookup('file', '{{ Jenkins_User_SSHKey }}') }}"
        - name: Create FTP user with password
          action: user name="{{ jckftp_Username }}" shell=/bin/false password={{ lookup('file', jckftp_Passwd) }} state=present
          ignore_errors: yes
          tags: ftp_user
        - name: Create file for FTP access
          copy:
            content: ""
            dest: "/home/{{ jckftp_Username }}/filename.txt"
            force: no
            owner: "{{ jckftp_Username }}"
            mode: 0755
        - name: Copy krb5.conf
          copy:
            src: conf/krb5.conf
            dest: /etc/krb5.conf
            owner: root
            group: root
            mode: 0644
            backup: yes

        - name: Configure kerberos server
          command: kdb5_util create -r ADOPTOPENJDK_NET -W -s -P `pwgen -1`
          args:
            creates: /etc/krb5kdc/principal.kadm5

        - name: Run shell scripts
          shell: "{{ item }}"
          with_items:
            - kadmin.local -q "addprinc -pw `pwgen -1` admin/admin@ADOPTOPENJDK_NET"
            - kadmin.local -q "addprinc -pw user1 user1/jckservices.adoptopenjdk.net@ADOPTOPENJDK_NET"
            - kadmin.local -q "addprinc -pw user2 user2/jckservices.adoptopenjdk.net@ADOPTOPENJDK_NET"
            - kadmin.local -q getprincs | egrep '^admin/admin@|^user1/|^user2/' > krb5.jckusers.txt; if test $(wc -l < krb5.jckusers.txt) -ne 3; then echo Wrong number of users - expected 3:; cat krb5.jckusers.txt; rm krb5.jckusers.txt; exit 1; fi
          args:
            creates: krb5.jckusers.txt
          tags:
            #false positive for 'use shell only when shell is required'
            #this whole piece should be rewritten to avoid 'bashsible' code style
            - skip_ansible_lint

        - name: Start krb5-kdc service
          service:
            name: krb5-kdc
            state: started
        - name: Start krb5-admin-server service
          service:
            name: krb5-admin-server
            state: started
        - name: Start tomcat8 service
          service:
            name: tomcat8
            state: started
        - name: Setup iptables
          iptables:
            chain: INPUT
            ctstate: ESTABLISHED,RELATED
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            protocol: icmp
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            protocol: tcp
            destination_port: 22
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            protocol: tcp
            destination_port: 80
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            source: 159.122.210.194
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            source: 159.122.210.205
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            source: 207.254.71.30
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            source: 207.254.71.31
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            source: 147.75.193.234
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            source: 140.211.168.225
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            source: 140.211.168.217
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            source: 148.100.33.183
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            source: 148.100.33.184
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            source: 165.225.150.83
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            source: 169.55.170.68
            jump: ACCEPT
        - name: Setup iptables
          iptables:
            chain: INPUT
            jump: REJECT
        - name: iptables_permanent
          shell: iptables-save > /etc/iptables/rules.v4
        - name: Add cron job to check for updates
          cron: name="Check for Updates every Sunday at 5am"
            weekday="6"
            minute="0"
            hour="5"
            user=root
            job="/usr/bin/apt-get update && /usr/bin/apt-get -y upgrade"
            state=present
    # If your users are set to lock out after some retries you'll need this:
    #    - pamd:
    #        name: common-auth
    #        type: auth
    #        control: required
    #        module_path: pam_tally2.so
    #        new_type: auth
    #        new_control: "[success=1 default=ignore]"
    #        new_module_path: pam_succeed_if.so
    #        module_arguments: "user in jckftp"
    #        state: before
